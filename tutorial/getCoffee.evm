
======= Calls.sol:Cafe =======
EVM assembly:
    /* "Calls.sol":25:167  contract Cafe { // at 0xcafe... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "Calls.sol":25:167  contract Cafe { // at 0xcafe... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "Calls.sol":25:167  contract Cafe { // at 0xcafe... */
      mstore(0x40, 0x80)    // M[64 <- 128]
      jumpi(tag_1, lt(calldatasize, 0x04))
      calldataload(0x00)    // calldata
      0x0100000000000000000000000000000000000000000000000000000000
      swap1                 
      div                   
      dup1                  
      0xaf325da2            
      eq                    
      tag_2                 
      jumpi                 
    tag_1:
      stop
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
    tag_2:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_5
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_5:
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      pop
      tag_6
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_7
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_7:
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
        /* "--CODEGEN--":21:32   */
      0x0100000000
        /* "--CODEGEN--":8:19   */
      dup2
        /* "--CODEGEN--":5:33   */
      gt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_8
      jumpi
        /* "--CODEGEN--":46:47   */
      0x00
        /* "--CODEGEN--":43:44   */
      dup1
        /* "--CODEGEN--":36:48   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_8:
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      dup3
      add
        /* "--CODEGEN--":35:44   */
      dup4
        /* "--CODEGEN--":28:32   */
      0x20
        /* "--CODEGEN--":12:26   */
      dup3
        /* "--CODEGEN--":8:33   */
      add
        /* "--CODEGEN--":5:45   */
      gt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_9
      jumpi
        /* "--CODEGEN--":58:59   */
      0x00
        /* "--CODEGEN--":55:56   */
      dup1
        /* "--CODEGEN--":48:60   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_9:
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      dup1
      calldataload
      swap1
      0x20
      add
      swap2
        /* "--CODEGEN--":100:109   */
      dup5
        /* "--CODEGEN--":95:96   */
      0x01
        /* "--CODEGEN--":81:93   */
      dup4
        /* "--CODEGEN--":77:97   */
      mul
        /* "--CODEGEN--":67:75   */
      dup5
        /* "--CODEGEN--":63:98   */
      add
        /* "--CODEGEN--":60:110   */
      gt
        /* "--CODEGEN--":39:50   */
      0x0100000000
        /* "--CODEGEN--":25:37   */
      dup4
        /* "--CODEGEN--":22:51   */
      gt
        /* "--CODEGEN--":11:118   */
      or
        /* "--CODEGEN--":8:10   */
      iszero
      tag_10
      jumpi
        /* "--CODEGEN--":131:132   */
      0x00
        /* "--CODEGEN--":128:129   */
      dup1
        /* "--CODEGEN--":121:133   */
      revert
        /* "--CODEGEN--":8:10   */
    tag_10:
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      swap2
      swap1
      dup1
      dup1
      0x1f
      add
      0x20
      dup1
      swap2
      div
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
        /* "--CODEGEN--":30:33   */
      dup1
        /* "--CODEGEN--":22:28   */
      dup3
        /* "--CODEGEN--":14:20   */
      dup5
        /* "--CODEGEN--":1:34   */
      calldatacopy
        /* "--CODEGEN--":99:100   */
      0x00
        /* "--CODEGEN--":93:96   */
      dup2
        /* "--CODEGEN--":85:91   */
      dup5
        /* "--CODEGEN--":81:97   */
      add
        /* "--CODEGEN--":74:101   */
      mstore
        /* "--CODEGEN--":137:141   */
      0x1f
        /* "--CODEGEN--":133:142   */
      not
        /* "--CODEGEN--":126:130   */
      0x1f
        /* "--CODEGEN--":121:124   */
      dup3
        /* "--CODEGEN--":117:131   */
      add
        /* "--CODEGEN--":113:143   */
      and
        /* "--CODEGEN--":106:143   */
      swap1
      pop
        /* "--CODEGEN--":169:172   */
      dup1
        /* "--CODEGEN--":161:167   */
      dup4
        /* "--CODEGEN--":157:173   */
      add
        /* "--CODEGEN--":147:173   */
      swap3
      pop
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      tag_11
      jump	// in
    tag_6:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
    tag_11:
        /* "Calls.sol":105:109  uint */
      0x00
        /* "Calls.sol":120:128  0xc0ffee */
      0xc0ffee
        /* "Calls.sol":113:128  return 0xc0ffee */
      swap1
      pop
        /* "Calls.sol":56:131  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      swap2
      swap1
      pop
      jump	// out

    auxdata: 0xa165627a7a723058201411d5cf27bd3d9157c5b726306791411a208df8fe1adbf5839a7a8fb55053150029
}


======= Calls.sol:Person =======
EVM assembly:
    /* "Calls.sol":169:426  contract Person {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "Calls.sol":169:426  contract Person {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "Calls.sol":169:426  contract Person {... */
      mstore(0x40, 0x80)  // M[64 <- 128]
      jumpi(tag_1, lt(calldatasize, 0x04))
      calldataload(0x00)  // calldata
      0x0100000000000000000000000000000000000000000000000000000000
      swap1               // 
      div                 // right shift calldata 28 bytes = fhash
      dup1                // fhash fhash
      0x1d134704          // hash fhash fhash                     
      eq                  // 1 fhash
      tag_2               // tag2 1 fhash
      jumpi               // fhash
      dup1
      0x6cee6d77
      eq
      tag_3
      jumpi
      dup1
      0xcbedbf5a
      eq
      tag_4
      jumpi
    tag_1:
      0x00
      dup1
      revert
        /* "Calls.sol":189:284  function getCoffee() public payable returns (uint) {... */
    tag_2:
      tag_5              // tag5 fhash
      tag_6              // tag6 tag5 fhash
      jump	// in        // tag5 fhash
    tag_5:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "Calls.sol":353:424  function transferMoney() public {... */
    tag_3:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_7
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_7:
        /* "Calls.sol":353:424  function transferMoney() public {... */
      pop
      tag_8
      tag_9
      jump	// in
    tag_8:
      stop
        /* "Calls.sol":287:350  function sendMoney() public {... */
    tag_4:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_10
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_10:
        /* "Calls.sol":287:350  function sendMoney() public {... */
      pop
      tag_11
      tag_12
      jump	// in
    tag_11:
      stop
        /* "Calls.sol":189:284  function getCoffee() public payable returns (uint) {... */
    tag_6:
        /* "Calls.sol":234:238  uint */
      0x00              // 0 tag5 fhash
        /* "Calls.sol":258:264  0xcafe */
      0xcafe            // 0xcafe 0 tag5 fhash
        /* "Calls.sol":253:270  Cafe(0xcafe).make */
      0xffffffffffffffffffffffffffffffffffffffff
      and               // 0xcafe 0 tag5 fhash
      0xaf325da2        // 0xaf325da2 0xcafe 0 tag5 fhash
        /* "Calls.sol":253:279  Cafe(0xcafe).make("latte") */
      mload(0x40)       // 128 0xaf325da2 0xcafe 0 tag5 fhash
      dup2              // 0xaf325da2 128 0xaf325da2 0xcafe 0 tag5 fhash
      0xffffffff        // 
      and               // 0xaf325da2 128 0xaf325da2 0xcafe 0 tag5 fhash
      0x0100000000000000000000000000000000000000000000000000000000
      mul               // (28bytes * 0xaf325da2)=0xaf325da200..00   128 0xaf325da2 0xcafe 0 tag5 fhash
      dup2              // 128 0xaf325da200..00 128 0xaf325da2 0xcafe 0 tag5 fhash
      mstore            // 128 0xaf325da2 0xcafe 0 tag5 fhash                              // M[128 <- 0xaf325da200..00]
      0x04              // 4 128 0xaf325da2 0xcafe 0 tag5 fhash
      add               // 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup1              //
      dup1              // 132 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      0x20              // 32 132 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      add               // 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup3              // 132 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup2              // 164 132 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      sub               // 32 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup3              // 132 32 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      mstore            // 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash         // M[132 <- 32]
      0x05              // 5 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup2              // 164 5 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      mstore            // 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash         // M[164 <- 5]
      0x20              // 32 164 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      add               // 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup1              // 196 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      0x6c61747465000000000000000000000000000000000000000000000000000000   // 0x6c6174746500..00 196 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      dup2              // 196 0x6c6174746500..00 196 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      mstore            // 196 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash     // M[196 <- 0x6c6174746500..00]
      pop               // 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      0x20              // 32 196 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      add               // 228 132 132 0xaf325da2 0xcafe 0 tag5 fhash
      swap2             // 132 132 228 0xaf325da2 0xcafe 0 tag5 fhash
      pop               // 
      pop               // 228 0xaf325da2 0xcafe 0 tag5 fhash
      0x20              // 32 228 0xaf325da2 0xcafe 0 tag5 fhash 
      mload(0x40)       // 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      dup1              // 128 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      dup4              // 228 128 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      sub               // 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      dup2              // 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      0x00              // 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      dup8              // 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      dup1              // 0xcafe 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      extcodesize       // cafeAcctCodeSize 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      iszero            // 0 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
        /* "--CODEGEN--":8:17   */
      dup1              // 0 0 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
        /* "--CODEGEN--":5:7   */
      iszero            // 1 0 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      tag_14            // tag14 1 0 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
      jumpi             // 0 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_14:
        /* "Calls.sol":253:279  Cafe(0xcafe).make("latte") */
      pop       // 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash 
      gas       // availableGas 0xcafe 0 128 100 128 32 228 0xaf325da2 0xcafe 0 tag5 fhash

      call      // 228 0xaf325da2 0xcafe 0 tag5 fhash
/* 
   rule <k> CALL GCAP=availableGas ACCTTO=0xcafe VALUE=0 ARGSTART=128 ARGWIDTH=100 RETSTART=128 RETWIDTH=32
        => #checkCall ACCTFROM VALUE
        ~> #call ACCTFROM ACCTTO ACCTTO VALUE VALUE #range(LM, ARGSTART, ARGWIDTH) false
        ~> #return RETSTART RETWIDTH
        ...
        </k>
        <schedule> SCHED </schedule>
        <id> ACCTFROM=msg.sender </id>
        <localMem> LM </localMem>

  rule <k> #checkCall ACCT=msg.sender VALUE=0 => . ... </k>
       <callDepth> CD </callDepth>
       <account>
         <acctID> ACCT </acctID>
         <balance> BAL </balance>
         ...
       </account>
    requires notBool (VALUE >Int BAL orBool CD >=Int 1024)

  rule <k> #call ACCTFROM=msg.sender ACCTTO=0xcafe ACCTCODE=0xcafe VALUE=0 APPVALUE=0 ARGS=#range(LM, ARGSTART=128, ARGWIDTH=100) STATIC=false
        => #callWithCode ACCTFROM ACCTTO #asMapOpCodes(#dasmOpCodes(CODE, SCHED)) CODE VALUE APPVALUE ARGS STATIC
         ...
       </k>
       <schedule> SCHED </schedule>
       <account>
           <acctID> ACCTCODE=0xcafe </acctID>
           <code> CODE </code>
           ...
       </account>
    requires notBool ACCTCODE in #precompiledAccounts(SCHED)
*/
      iszero    // 
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_15
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_15:
        /* "Calls.sol":253:279  Cafe(0xcafe).make("latte") */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_16
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_16:
        /* "Calls.sol":253:279  Cafe(0xcafe).make("latte") */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "Calls.sol":246:279  return Cafe(0xcafe).make("latte") */
      swap1
      pop
        /* "Calls.sol":189:284  function getCoffee() public payable returns (uint) {... */
      swap1
      jump	// out
        /* "Calls.sol":353:424  function transferMoney() public {... */
    tag_9:
        /* "Calls.sol":399:405  0xcafe */
      0xcafe
        /* "Calls.sol":391:415  address(0xcafe).transfer */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "Calls.sol":391:419  address(0xcafe).transfer(16) */
      0x08fc
        /* "Calls.sol":416:418  16 */
      0x10
        /* "Calls.sol":391:419  address(0xcafe).transfer(16) */
      swap1
      dup2
      iszero
      mul
      swap1
      mload(0x40)
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      dup9
      dup9
      call
      swap4
      pop
      pop
      pop
      pop
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_18
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_18:
        /* "Calls.sol":391:419  address(0xcafe).transfer(16) */
      pop
        /* "Calls.sol":353:424  function transferMoney() public {... */
      jump	// out
        /* "Calls.sol":287:350  function sendMoney() public {... */
    tag_12:
        /* "Calls.sol":329:335  0xcafe */
      0xcafe
        /* "Calls.sol":321:341  address(0xcafe).send */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "Calls.sol":321:345  address(0xcafe).send(16) */
      0x08fc
        /* "Calls.sol":342:344  16 */
      0x10
        /* "Calls.sol":321:345  address(0xcafe).send(16) */
      swap1
      dup2
      iszero
      mul
      swap1
      mload(0x40)
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      dup9
      dup9
      call
      swap4
      pop
      pop
      pop
      pop
      pop
        /* "Calls.sol":287:350  function sendMoney() public {... */
      jump	// out

    auxdata: 0xa165627a7a72305820fb683d366109f652bfba5186616f5d62ab50d9686ff84dc5e8e149fbe4f0776a0029
}

